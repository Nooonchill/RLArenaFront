import React, { useState, useEffect, useRef } from "react";
import { useParams } from "react-router-dom";
import ReactMarkdown from "react-markdown";
import CompetitionImage from '/src/assets/imgs/CompetiotionTemplate.png'
import Star from '/src/assets/icons/Star.svg'
import User from '/src/assets/icons/User.svg'
import Add from '/src/assets/icons/Add.svg'


const Guide = () => {
  const { id } = useParams();

  const guidesDetails = [
    { 
      id: 201, 
      title: "Руководство по прогнозированию цен на недвижимость", 
      creator: "RealEstate Insights", 
      createdDate: "22-02-2023", 
      rate: 4.8, 
      added: 1240,
      tags: ["Цены", "Недвижимость", "Прогнозирование"],
      text: `
# Руководство по прогнозированию цен на недвижимость

## Описание
Это руководство поможет вам понять, как использовать данные о ценах на дома для построения прогнозных моделей. Мы разберем основные подходы к анализу данных, обучению моделей и интерпретации результатов.

## Содержание
1. **Введение в анализ недвижимости**  
   Основные понятия и структура данных о недвижимости.
2. **Подготовка данных**  
   Как обработать и визуализировать данные для построения моделей.
3. **Построение моделей прогнозирования**  
   Подходы к выбору алгоритмов и обучение моделей.
4. **Оценка качества моделей**  
   Методы проверки точности и устойчивости прогнозов.

## Требования
- **Предварительные знания:**  
  Основы статистики и машинного обучения.
- **Инструменты:**  
  Python (библиотеки: Pandas, Scikit-learn, Matplotlib).

## Примеры
- Визуализация изменений цен в зависимости от площади и расположения.
- Обучение модели линейной регрессии для прогнозирования цен.

## Ссылки
- [Официальный репозиторий примеров](https://example.com/realestate-guides)
- [Видео-уроки на YouTube](https://youtube.com/example-realestate)
`

    },
    { 
      id: 202, 
      title: "Как анализировать данные о транспортных средствах", 
      creator: "DataScience Auto", 
      createdDate: "15-08-2022", 
      rate: 4.5, 
      added: 987,
      tags: ["Анализ", "Транспорт", "Автомобили"],
      text: `
# Руководство по анализу характеристик автомобилей

## Описание
Это руководство предназначено для изучения зависимости стоимости автомобиля от его характеристик. Вы узнаете, как анализировать данные, находить ключевые признаки и строить модели для прогнозирования цен.

## Содержание
1. **Обзор автомобильных данных**  
   Источник данных и описание основных характеристик: мощность двигателя, пробег, возраст автомобиля и др.
2. **Анализ данных**  
   Методы очистки и визуализации данных для лучшего понимания зависимостей.
3. **Выбор признаков**  
   Как выбрать наиболее значимые характеристики для модели.
4. **Построение модели прогнозирования**  
   Использование алгоритмов машинного обучения, таких как случайные леса и градиентный бустинг.
5. **Оптимизация и оценка модели**  
   Способы настройки гиперпараметров для повышения точности прогнозов.

## Требования
- **Предварительные знания:**  
  Основы машинного обучения и работы с данными.
- **Инструменты:**  
  Python (библиотеки: Pandas, Scikit-learn, Seaborn).

## Примеры
- Создание графиков зависимости цены от пробега и возраста автомобиля.
- Построение модели для предсказания стоимости автомобиля на основе его характеристик.

## Ссылки
- [Таблица данных автомобилей](https://example.com/automobile-dataset)
- [Курс по анализу автомобильных данных](https://example.com/auto-course)
`

    },
    { 
      id: 203, 
      title: "Пошаговое руководство для спортивной аналитики", 
      creator: "PlayStats", 
      createdDate: "11-05-2023", 
      rate: 4.6, 
      added: 1120,
      tags: ["Спорт", "СпортивнаяАналитика", "PlayStats"],
      text: `
# Руководство по анализу посещаемости спортивных мероприятий

## Описание
Это руководство поможет вам исследовать данные о посещаемости различных спортивных событий. Вы научитесь анализировать тренды, сравнивать популярность видов спорта и создавать прогнозы для планирования мероприятий.

## Содержание
1. **Обзор данных о посещаемости**  
   Источник данных, их структура и основные метрики (количество посетителей, популярность по сезонам, локации).
2. **Анализ трендов**  
   Выявление динамики посещаемости по годам, сезонам и видам спорта.
3. **Визуализация данных**  
   Построение графиков и диаграмм для наглядного представления информации.
4. **Моделирование посещаемости**  
   Использование машинного обучения для прогнозирования посещаемости будущих событий.
5. **Применение результатов анализа**  
   Оптимизация маркетинговых кампаний, выбор площадок и оценка экономической эффективности мероприятий.

## Требования
- **Предварительные знания:**  
  Базовый уровень анализа данных и визуализации.
- **Инструменты:**  
  Python (библиотеки: Matplotlib, Pandas, Statsmodels).

## Примеры
- Сравнение посещаемости хоккейных матчей и футбольных игр за последние 5 лет.
- Прогнозирование количества зрителей на финале национального чемпионата.

## Ссылки
- [Исторические данные по посещаемости](https://example.com/sports-attendance-data)
- [Примеры анализа спортивных данных](https://example.com/sports-analysis)
`
    },
    { 
      id: 204, 
      title: "Анализ данных здоровья: от начала до эксперта", 
      creator: "Wellness Analytics", 
      createdDate: "28-10-2021", 
      rate: 4.9, 
      added: 2345,
      tags: ["Здоровье", "Рост", "Изучение"],
      text: `
# Руководство по анализу здоровья детей и подростков

## Описание
Руководство создано для специалистов в области здравоохранения и исследователей, желающих понять тенденции здоровья среди детей и подростков. Мы рассмотрим методы анализа данных о состоянии здоровья, влиянии окружающей среды и питания.

## Содержание
1. **Введение в данные**  
   - Источники и сбор информации: анкеты, медицинские осмотры, данные образовательных учреждений.
   - Ключевые параметры: рост, вес, ИМТ, уровень физической активности.

2. **Факторы, влияющие на здоровье**  
   - Влияние уровня физической активности на развитие.  
   - Роль сбалансированного питания и анализа рациона.  
   - Экологические аспекты: качество воздуха, шумовые загрязнения.

3. **Анализ данных**  
   - Как находить взаимосвязи между параметрами (корреляции и причинные зависимости).  
   - Построение сегментов для выявления групп риска.

4. **Построение рекомендаций**  
   - Подготовка отчетов для образовательных учреждений.  
   - Разработка персонализированных рекомендаций для родителей.

## Примеры использования
- Определение зависимости между физической активностью и школьной успеваемостью.  
- Сравнение состояния здоровья детей в городах с различной экологической обстановкой.

## Ссылки
- [Данные о здоровье детей](https://example.com/health-for-kids)  
- [Стандарты анализа данных в здравоохранении](https://example.com/health-data-guidelines)  
`
    },
    { 
      id: 205, 
      title: "Создание климатических моделей на основе данных", 
      creator: "EnviroTech", 
      createdDate: "18-03-2020", 
      rate: 4.7, 
      added: 1823,
      tags: ["Климат", "Модели", "Разработка"],
      text: `
## Данные о погоде и климате за 10 лет: Руководство

### Область применения
Этот материал предназначен для метеорологов, климатологов, исследователей и инженеров, работающих над проектами, связанными с моделированием климата, прогнозированием погоды и анализом изменения климата.

### Что включено
- **Исторические данные:**  
  Показатели температуры, влажности, осадков, скорости ветра и атмосферного давления за последние 10 лет.
  
- **Географический охват:**  
  Данные представлены по регионам, включая городские и сельские территории.  

- **Формат данных:**  
  CSV-файлы для анализа, графические отчеты в PDF, а также API-доступ для автоматизированной обработки.

### Практические примеры
1. **Прогнозирование урожайности:** Используйте данные о климате для моделирования условий роста сельскохозяйственных культур.  
2. **Анализ экстремальных событий:** Определяйте частоту и интенсивность штормов, засух и наводнений.  
3. **Градостроительство:** Планирование строительства с учетом долгосрочных климатических тенденций.

### Как начать
1. Загрузите данные в выбранное программное обеспечение (Excel, Python, R).  
2. Изучите корреляцию между погодными параметрами и другими факторами.  
3. Постройте визуализации, чтобы показать сезонные изменения и долгосрочные тренды.

### Полезные ресурсы
- [Руководство по анализу временных рядов](https://example.com/time-series-guide)  
- [Климатические тренды и прогнозы](https://example.com/climate-trends)  

### Контакты
Если у вас есть вопросы, свяжитесь с нашей поддержкой: support@climatetrack.com.
`
    },
    { 
      id: 206, 
      title: "Основы геоанализа: от POI до пространственных моделей", 
      creator: "GeoExperts", 
      createdDate: "29-07-2023", 
      rate: 4.4, 
      added: 1012,
      tags: ["Геоанализ", "География", "GeoExperts"],
      text: `
## Геоданные с точками интереса: Руководство

### Описание
Этот набор данных включает географические координаты и метаданные для точек интереса (POI) в различных регионах. Он предназначен для использования в приложениях, связанных с картографией, навигацией и анализом географических данных.

### Структура данных
Данные включают следующие поля:
- **ID точки интереса**  
- **Название точки интереса**  
- **Тип точки интереса (например, ресторан, музей, парк)**  
- **Географические координаты (широта и долгота)**  
- **Описание точки интереса**  
- **Часы работы и контактная информация (при наличии)**  

### Применение данных
1. **Разработка картографических сервисов:** Используйте данные для отображения интересных мест на картах.  
2. **Анализ трафика и местоположений:** Оцените популярность различных локаций на основе плотности точек интереса.  
3. **Рекомендательные системы:** Создайте систему рекомендаций для пользователей на основе их предпочтений.

### Формат и доступность
- **Формат:** CSV, JSON, GeoJSON для интеграции с картографическими платформами.
- **Доступность:** Данные можно загружать через API или скачать как файл для локального использования.
- **Обновления:** Обновления данных предоставляются ежеквартально.

### Пример использования
- **Проект на Python:**
  1. Загрузите данные в Pandas DataFrame.
  2. Используйте библиотеку 'folium' для отображения точек интереса на карте.
  3. Применяйте фильтры для отображения только определенных типов точек интереса.

### Поддержка и дополнительные ресурсы
- [Документация API для работы с геоданными](https://example.com/api-docs)
- [Руководство по интеграции с картографическими сервисами](https://example.com/maps-guide)

Для получения помощи или для связи с нами, отправьте запрос на support@geodatasolutions.com.
`
    },
  ];
  

  const guideDetails = guidesDetails.find((item) => item.id === +id);

  const tabs = [
    { id: 1, title: "Обзор" },
  ];

  const [activeTab, setActiveTab] = useState(tabs[0].id);
  const [underlineStyle, setUnderlineStyle] = useState({});
  const tabsRef = useRef([]);

  useEffect(() => {
    const activeButton = tabsRef.current[activeTab - 1];
    if (activeButton) {
      const { offsetLeft, offsetWidth } = activeButton;
      setUnderlineStyle({
        left: `${offsetLeft}px`,
        width: `${offsetWidth}px`,
      });
    }
  }, [activeTab]);

  const handleTabClick = (tabId) => {
    setActiveTab(tabId);
  };


  return (
    <div className="max-w-[1110px] mx-auto">
      <div className="flex flex-row gap-20 justify-between pl-2 mt-12 text-dark">
        <div className="mb-8 flex-grow">
          <div className="text-dark mb-6">
            <h1 className="text-4xl mb-3">{guideDetails.title}</h1>
            <div className="flex flex-row overflow-hidden flex-nowrap gap-2 mb-2">
              {guideDetails.tags.map((tag) => (
                <div className="bg-lightwhiteturquoise rounded-full py-1 px-2">
                  <span>#{tag}</span>
                </div>
              ))}
            </div>
            <div className="flex flex-row justify-between items-end">
              <span>{guideDetails.createdDate.replaceAll("-", ".")}</span>
              <button className="flex flex-row items-center gap-1 w-max h-[38px] py-0 border-none font-medium bg-turquoise text-white hover:bg-lightturquoise active:bg-darkturquoise rounded-full">
                Сохранить
              </button>
            </div>
          </div>
          <div className="relative flex flex-row gap-[30px] mb-6 text-lg">
            {tabs.map((tab, index) => (
              <button
                key={tab.id}
                onClick={() => handleTabClick(tab.id)}
                ref={(el) => (tabsRef.current[index] = el)}
                className={`p-0 mb-0.25 bg-white border-none ${
                  activeTab === tab.id ? "text-darkturquoise" : "text-dark"
                }`}
              >
                {tab.title}
              </button>
            ))}
            {/* Подчеркивание */}
            <div
              className="absolute bottom-0 h-[2px] bg-darkturquoise transition-all duration-300"
              style={underlineStyle}
            ></div>
          </div>
          {activeTab == 1 ? (
            <div className="shadow-md rounded-lg">
              <div className="markdown-container p-4">
                <ReactMarkdown>{guideDetails.text}</ReactMarkdown>
              </div>
            </div>
          ) : (
            <div className="flex flex-col items-center">
            </div>
          )}
        </div>
        <div className="min-w-[320px]">
          <img src={CompetitionImage} className="w-[320px] h-[180px] mb-4" alt="" />
          <div className="flex flex-col gap-y-2 text-lg font-semibold">
            <span>{guideDetails.creator}</span> 
            <div className="flex flex-row">
              <img src={User} className="mr-2" alt="" />
              <span>{guideDetails.added}</span>
            </div> 
            <div className="flex flex-row">
              <img src={Star} className="mr-2" alt="" />
              <span className="">{guideDetails.rate}</span>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Guide;
